var roomMgr = require('./roommgr');
var userList = {};
var userOnline = 0;
exports.bind = function (userId, socket) {
    userList[userId] = socket;
    userOnline++;
};
exports.del = function (userId, socket) {
    delete userList[userId];
    userOnline--;
};
exports.get = function (userId) {
    return userList[userId];
};
exports.isOnline = function (userId) {
    var data = userList[userId];
    if (data != null) {
        return true;
    }
    return false;
};
exports.getOnlineCount = function () {
    return userOnline;
};
exports.sendMsg = function (userId, event, msgdata) {
    console.log(event);
    var userInfo = userList[userId];
    if (userInfo == null) {
        return;
    }
    var socket = userInfo;
    if (socket == null) {
        return;
    }
    socket.emit(event, msgdata);
};
exports.kickAllInRoom = function (roomId) {
    if (roomId == null) {
        return;
    }
    var roomInfo = roomMgr.getRoom(roomId);
    if (roomInfo == null) {
        return;
    }
    for (var i = 0; i < roomInfo.seats.length; ++i) {
        var rs = roomInfo.seats[i];
        //如果不需要发给发送方，则跳过
        if (rs.userId > 0) {
            var socket = userList[rs.userId];
            if (socket != null) {
                exports.del(rs.userId);
                socket.disconnect();
            }
        }
    }
};
exports.broacastInRoom = function (event, data, sender, includingSender) {
    var roomId = roomMgr.getUserRoom(sender);
    if (roomId == null) {
        return;
    }
    var roomInfo = roomMgr.getRoom(roomId);
    if (roomInfo == null) {
        return;
    }
    for (var i = 0; i < roomInfo.seats.length; ++i) {
        var rs = roomInfo.seats[i];
        //如果不需要发给发送方，则跳过
        if (rs.userId == sender && includingSender != true) {
            continue;
        }
        var socket = userList[rs.userId];
        if (socket != null) {
            socket.emit(event, data);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlcm1nci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcC9tb2RlbC91c2VybWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNuQyxJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7QUFDbEIsSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFDO0FBQ25CLE9BQU8sQ0FBQyxJQUFJLEdBQUcsVUFBUyxNQUFNLEVBQUMsTUFBTTtJQUNqQyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzFCLFVBQVUsRUFBRSxDQUFDO0FBQ2pCLENBQUMsQ0FBQztBQUVGLE9BQU8sQ0FBQyxHQUFHLEdBQUcsVUFBUyxNQUFNLEVBQUMsTUFBTTtJQUNoQyxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QixVQUFVLEVBQUUsQ0FBQztBQUNqQixDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxHQUFHLFVBQVMsTUFBTTtJQUN6QixPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM1QixDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsUUFBUSxHQUFHLFVBQVMsTUFBTTtJQUM5QixJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUIsSUFBRyxJQUFJLElBQUksSUFBSSxFQUFDO1FBQ1osT0FBTyxJQUFJLENBQUM7S0FDZjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUMsQ0FBQztBQUVGLE9BQU8sQ0FBQyxjQUFjLEdBQUc7SUFDckIsT0FBTyxVQUFVLENBQUM7QUFDdEIsQ0FBQyxDQUFBO0FBRUQsT0FBTyxDQUFDLE9BQU8sR0FBRyxVQUFTLE1BQU0sRUFBQyxLQUFLLEVBQUMsT0FBTztJQUMzQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25CLElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxJQUFHLFFBQVEsSUFBSSxJQUFJLEVBQUM7UUFDaEIsT0FBTztLQUNWO0lBQ0QsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDO0lBQ3RCLElBQUcsTUFBTSxJQUFJLElBQUksRUFBQztRQUNkLE9BQU87S0FDVjtJQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLENBQUMsQ0FBQztBQUVGLE9BQU8sQ0FBQyxhQUFhLEdBQUcsVUFBUyxNQUFNO0lBQ25DLElBQUcsTUFBTSxJQUFJLElBQUksRUFBQztRQUNkLE9BQU87S0FDVjtJQUNELElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsSUFBRyxRQUFRLElBQUksSUFBSSxFQUFDO1FBQ2hCLE9BQU87S0FDVjtJQUVELEtBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBQztRQUMxQyxJQUFJLEVBQUUsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTNCLGdCQUFnQjtRQUNoQixJQUFHLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFDO1lBQ2IsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNqQyxJQUFHLE1BQU0sSUFBSSxJQUFJLEVBQUM7Z0JBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3ZCLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUN2QjtTQUNKO0tBQ0o7QUFDTCxDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsY0FBYyxHQUFHLFVBQVMsS0FBSyxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsZUFBZTtJQUMvRCxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pDLElBQUcsTUFBTSxJQUFJLElBQUksRUFBQztRQUNkLE9BQU87S0FDVjtJQUNELElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsSUFBRyxRQUFRLElBQUksSUFBSSxFQUFDO1FBQ2hCLE9BQU87S0FDVjtJQUVELEtBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBQztRQUMxQyxJQUFJLEVBQUUsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTNCLGdCQUFnQjtRQUNoQixJQUFHLEVBQUUsQ0FBQyxNQUFNLElBQUksTUFBTSxJQUFJLGVBQWUsSUFBSSxJQUFJLEVBQUM7WUFDOUMsU0FBUztTQUNaO1FBQ0QsSUFBSSxNQUFNLEdBQUcsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqQyxJQUFHLE1BQU0sSUFBSSxJQUFJLEVBQUM7WUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsQ0FBQztTQUMzQjtLQUNKO0FBQ0wsQ0FBQyxDQUFDIn0=